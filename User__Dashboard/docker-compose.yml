version: "3"
services:
  frontend:
    build:
      context: ./client
      dockerfile: ./docker/Dockerfile
      target: dev
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - /app/node_modules
      - ./client:/app

  backend:
    build:
      context: ./backend
      dockerfile: ./docker/Dockerfile
      target: dev
    ports:
      - "8080:8080"
    volumes:
      - /app/node_modules
      - ./backend:/app
    depends_on:
      - mongo
    environment:
      MONGODB_URL: mongodb://apparelplm:apparelplm@mongo:27017/apparelplm?retryWrites=true

  mongo:
    image: mongo:7.0.5
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootPassword
      MONGO_INITDB_DATABASE: apparelplm 
      MONGO_DB_USER: apparelplm
      MONGO_DB_PASS: apparelplm
      MONGO_DB_DATABASE: apparelplm
    volumes:
      - ./backend/docker/mongo_initdb.d/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    depends_on:
      - mongo
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:rootPassword@mongo:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin